// Code generated by hertz generator.

package api

import (
	api "Herbal/server/cmd/api/biz/model/api"
	base "Herbal/server/cmd/api/biz/model/base"
	"Herbal/server/cmd/api/config"
	"Herbal/server/shared/kitex_gen/user"
	"context"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// Register .
// @router /user/register [POST]
func Register(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.RegisterReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	cli := config.GlobalUserClient
	res, err := cli.Register(ctx, &user.RegisterReq{
		Username:        req.Username,
		Password:        req.Password,
		ConfirmPassword: req.ConfirmPassword,
		Role:            req.Role,
	})
	resp := &api.RegisterResp{
		Base: &api.BaseResponse{
			StatusCode: res.BaseResp.StatusCode,
			StatusMsg:  res.BaseResp.StatusMsg,
		},
	}
	c.JSON(consts.StatusOK, resp)
}

// Login .
// @router /user/login [POST]
func Login(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.LoginReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}

// ChangePassword .
// @router /user/password [POST]
func ChangePassword(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.ChangePasswordReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.NilResponse)

	c.JSON(consts.StatusOK, resp)
}
